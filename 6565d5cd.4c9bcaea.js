(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{108:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return h}));var n=r(0),c=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=c.a.createContext({}),p=function(e){var t=c.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,h=u["".concat(o,".").concat(d)]||u[d]||b[d]||a;return r?c.a.createElement(h,s(s({ref:t},l),{},{components:r})):c.a.createElement(h,s({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},78:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return p}));var n=r(2),c=r(6),a=(r(0),r(108)),o={id:"cache",title:"subcommand 'cache'"},s={unversionedId:"cli/cache",id:"version-1.8.x/cli/cache",isDocsHomePage:!1,title:"subcommand 'cache'",description:"The cache subcommand starts the Bzl remote cache.",source:"@site/versioned_docs/version-1.8.x/cli/cache.md",slug:"/cli/cache",permalink:"/docs/cli/cache",editUrl:"https://github.com/stackb/bazel-stack-vscode/edit/master/docs/versioned_docs/version-1.8.x/cli/cache.md",version:"1.8.x",sidebar:"version-1.8.x/docs",previous:{title:"subcommand 'serve'",permalink:"/docs/cli/serve"},next:{title:"subcommand 'use'",permalink:"/docs/cli/use"}},i=[{value:"Flags",id:"flags",children:[{value:"gRPC",id:"grpc",children:[]},{value:"HTTP",id:"http",children:[]}]}],l={rightToc:i};function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"cache")," subcommand starts the Bzl remote cache."),Object(a.b)("h2",{id:"flags"},"Flags"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"start the remote cache\n\nUsage:\n  bzl cache [flags]\n\nFlags:\n      --address strings                  bind URIs for the remote cache. (default [grpc://localhost:2020,http://localhost:2021])\n      --dir string                       base directory for the disk cache.\n  -h, --help                             help for cache\n      --max_size_gb int                  size in GB for the disk cache. (default 10)\n      --progress                         flag to enable progress on uploads\n      --progress_threshold_size_kb int   only show progress bar for blobs later than given size (default 512)\n")),Object(a.b)("p",null,"By default the remote cache will bind to separate addresses and serve both HTTP and gRPC traffic."),Object(a.b)("h3",{id:"grpc"},"gRPC"),Object(a.b)("p",null,"To start only the gRPC cache (with progress bars):"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"bzl cache --address=grpc://localhost:2020 --progress\n")),Object(a.b)("h3",{id:"http"},"HTTP"),Object(a.b)("p",null,"To start only the HTTP cache (with progress bars):"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"bzl cache --address=http://localhost:2021 --progress\n")))}p.isMDXComponent=!0}}]);